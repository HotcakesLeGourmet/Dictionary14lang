{"version":3,"sources":["data/category.js","components/Header/Header.js","components/definitions/Definitions.js","App.js","index.js"],"names":["categories","value","label","Header","setCategory","category","word","setWord","LightMode","darkTheme","createTheme","palette","primary","main","type","className","ThemeProvider","theme","TextField","onChange","e","target","select","map","option","MenuItem","Definitions","meanings","style","backgroundColor","borderRadius","src","phonetics","audio","controls","mean","item","definitions","def","color","definition","width","example","synonyms","s","App","useState","setMeanings","setLightMode","DarkMode","withStyles","switchBase","grey","checked","track","Switch","dictionaryAPI","a","axios","get","data","console","log","useEffect","height","transtion","Container","maxWidth","display","flexDirection","justifyContent","position","top","right","paddingTop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce408816.chunk.js","sourcesContent":["const categories = [\r\n    { value: \"English\", label: \"en\" },\r\n    { value: \"Hindi\", label: \"hi\" },\r\n    { value: \"Spanish\", label: \"es\" },\r\n    { value: \"French\", label: \"fr\" },\r\n    { value: \"Japanese\", label: \"ja\" },\r\n    { value: \"Russian\", label: \"ru\" },\r\n    { value: \"German\", label: \"de\" },\r\n    { value: \"Italian\", label: \"it\" },\r\n    { value: \"Korean\", label: \"ko\" },\r\n    { value: \"Brazilian Portuguese\", label: \"pt-BR\" },\r\n    { value: \"Arabic\", label: \"ar\" },\r\n    { value: \"Turkish\", label: \"tr\" },\r\n  ];\r\n  \r\n  export default categories;","import React from 'react';\r\nimport \"./Header.css\";\r\nimport { TextField, ThemeProvider, createTheme, MenuItem } from '@material-ui/core';\r\nimport categories from '../../data/category';\r\n\r\nconst Header = ({setCategory, category, word, setWord, LightMode}) => {\r\n    const darkTheme = createTheme({\r\n        palette: {\r\n            primary: {\r\n                main: LightMode ? '#000' :'#fff',\r\n            },\r\n          type: LightMode ? 'light' :'dark',\r\n        },\r\n      });\r\n\r\n         const handleChange = (language) => {\r\n             setCategory(language);\r\n             setWord(\"\")\r\n         }\r\n    return (\r\n        <div className='header'>\r\n            <span className='title'>{word?word:\"Word-hunt\"}</span>\r\n            <div className='inputs'>\r\n                <ThemeProvider theme={darkTheme}>\r\n\r\n                <TextField \r\n                className=\"search\"\r\n                label=\"Search a Word\"\r\n                      value={word}\r\n                      onChange={(e)=>setWord(e.target.value)} \r\n                />\r\n\r\n                <TextField\r\n                className='select'\r\n                select\r\n                  label=\"Language\"\r\n                  value={category}\r\n                  onChange={(e)=>setCategory(e.target.value)}\r\n                >\r\n            {categories.map((option)=> (\r\n                        <MenuItem key={option.label} value={option.label}>\r\n                            {option.value}\r\n                        </MenuItem>  \r\n            ))};\r\n        </TextField>\r\n\r\n                </ThemeProvider>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\";\r\nimport \"./Definitions.css\";\r\n\r\nconst Definitions = ({word, category, meanings, LightMode}) => {\r\n    return <div className='meanings'>\r\n            {meanings[0] && word && category === \"en\" && (\r\n                <audio\r\n                  style={{ backgroundColor: \"#fff\", borderRadius: 10 }}\r\n                  src={meanings[0].phonetics[0] && meanings[0].phonetics[0].audio}\r\n                  controls\r\n                >\r\n                  Your browser does not support the audio element.\r\n                </audio>\r\n              )}\r\n\r\n        { word === \"\" ? (\r\n                <span className=\"subTitle\">Start by typing a word in Search</span>\r\n            ) : (\r\n                meanings.map((mean)=> \r\n                  mean.meanings.map((item) => \r\n                    item.definitions.map((def) => (\r\n                        <div \r\n                        className=\"singleMean\" \r\n                        style={{\r\n                            backgroundColor:LightMode ? \"#3b5360\" : \"white\", \r\n                            color:LightMode ? \"white\" : \"black\" \r\n                        }} \r\n                        >\r\n                         <b>{def.definition}</b>\r\n                          <hr style={{backgroundColor: \"black\", width: \"100%\"}} />\r\n                              {def.example && (\r\n                                  <span>\r\n                                      <b>Example: </b>\r\n                                      {def.example}\r\n                                  </span>\r\n                                  \r\n                              )}\r\n                              {def.synonyms && (\r\n                                  <span>\r\n                                      <b> Synonyms: </b>\r\n                                      {def.synonyms.map((s)=>`${s}, `)}\r\n                                  </span>\r\n                              )}\r\n                        </div>\r\n                    ))\r\n                )))\r\n            \r\n        }\r\n    </div>\r\n};\r\n\r\nexport default Definitions;","import './App.css';\nimport axios from \"axios\";\nimport { useEffect, useState } from 'react';\nimport { Container, Switch} from \"@material-ui/core\";\nimport Header from \"./components/Header/Header\"\nimport Definitions from './components/definitions/Definitions';\nimport { grey } from '@material-ui/core/colors';\nimport { withStyles } from '@material-ui/styles';\nfunction App() {\n  const [word, setWord] = useState (\"\");\n  const [meanings, setMeanings] = useState([]);\n  const [category, setCategory] = useState(\"en\");\n  const [LightMode, setLightMode] = useState(false);\n\n  const DarkMode = withStyles({\n    switchBase: {\n      color: grey[300],\n      '&$checked': {\n        color: grey[500],\n      },\n      '&$checked + $track': {\n        backgroundColor: grey[500],\n      },\n    },\n    checked: {},\n    track: {},\n  })(Switch);\n\n  const dictionaryAPI = async () => {\n    try {\n      const data = await axios.get(\n      `https://api.dictionaryapi.dev/api/v2/entries/${category}/${word}`\n      );\n\n      setMeanings(data.data)\n    } catch(error) {\n      console.log(error);\n    }\n  };\n\n  console.log(meanings);\n\n  useEffect (()=> {\n    dictionaryAPI();\n  }, [word,category]);\n  return  <div className=\"App\" \n  style={{height:\"100vh\",\n  backgroundColor: LightMode ? \"#fff\" :\"#282c34\",\n  color:LightMode ? \"black\":\"white\",\n  transtion: \"all 0.5s linear\",\n}}\n\n  >\n    <Container \n    maxWidth=\"md\"\n    style={{ display: \"flex\", flexDirection: \"column\", height: \"100vh\", justifyContent: \"space-evenly\"}}>\n      <div style={{position: \"absolute\", top: 0, right: 15, paddingTop: 10}}\n      >\n        <span>{LightMode ? \"Light\" : \"Dark\"} </span>\n        <DarkMode checked={LightMode} \n                  onChange={() => setLightMode(!LightMode)} />\n      </div>\n      <Header  \n      category={category} \n      setCategory={setCategory}\n      word={word}\n      setWord={setWord}\n      LightMode={LightMode}\n      />\n      {meanings && (\n        <Definitions \n        word={word} \n        meanings={meanings} \n        category={category}\n        LightMode={LightMode} /> \n      )}\n    </Container>\n    </div>\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}